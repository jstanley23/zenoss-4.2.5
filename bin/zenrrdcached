#! /usr/bin/env bash
##############################################################################
# 
# Copyright (C) Zenoss, Inc. 2010, all rights reserved.
# 
# This content is made available according to terms specified in
# License.zenoss under the directory where your Zenoss product is installed.
# 
##############################################################################


if [ -z "$ZENHOME" ] ; then
    echo ERROR: '$ZENHOME' is not set.
    echo This is usually caused by executing this command as root rather than \
as the zenoss user.  Either define '$ZENHOME' or run this command as a \
different user.
    exit 1
fi

RRDCACHED_ADDRESS=$ZENHOME/var/rrdcached.sock
JOURNALDIR=$ZENHOME/var/rrd_journals
PIDFILE=$ZENHOME/var/rrdcached.pid
CONFFILE=$ZENHOME/etc/zenrrdcached.conf
PERFDIR=$ZENHOME/perf

if [ -z "$RRDCACHED" ]; then
    RRDCACHED=`which rrdcached`
fi

if [ ! -f "$RRDCACHED" ]; then
    echo rrdcached could not be found in '$RRDCACHED' or in the path.  Ensure \
that rrdcached is in the path or define '$RRDCACHED'.
    exit 1
fi

stats() { 
    $ZENHOME/bin/python $ZENHOME/Products/ZenRRD/zenrrdcached_util.py stats 
} 


running() {
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE 2>/dev/null`
        if [ -n "$PID" ]; then
            kill -0 $PID 2>/dev/null || ps -p "$PID" > /dev/null 2>&1
            return $?
        fi
    fi
    return 1
}

start() {
    if running; then
        echo is already running
    else
        if [ -f "$CONFFILE" ]; then

            THREADS=`${ZENHOME}/bin/zenglobalconf -f $CONFFILE -p write_threads`
            if [ -n "${THREADS}" ]; then
                OPTS="${OPTS} -t $THREADS"
            fi

            WRITE_TIMEOUT=`${ZENHOME}/bin/zenglobalconf -f $CONFFILE -p write_timeout`
            if [ -n "${WRITE_TIMEOUT}" ]; then
                OPTS="$OPTS -w $WRITE_TIMEOUT"
            fi

            DELAY=`${ZENHOME}/bin/zenglobalconf -f $CONFFILE -p write_delay`
            if [ -n "${DELAY}" ]; then
                OPTS="$OPTS -z $DELAY"
            fi

            FLUSH=`${ZENHOME}/bin/zenglobalconf -f $CONFFILE -p flush_timeout`
            if [ -n "${FLUSH}" ]; then
                OPTS="$OPTS -f $FLUSH"
            fi
        fi

        echo starting...
        "$RRDCACHED" -b $PERFDIR -p $PIDFILE -l $RRDCACHED_ADDRESS -j $JOURNALDIR $OPTS
    fi
}

run() {
    export OPTS="-g $OPTS"
    start
}

stop() {
    echo "stopping..."
    if running; then
        kill `cat $PIDFILE`
    else
        echo "already stopped"
    fi
}

restart() {
    stop
    start
}

status() {
    if running; then
        echo "program running; pid=`cat $PIDFILE`"
    else
        echo "not running"
    fi
}

genconf() {

 echo "#The number of thread for writing files. See -t option for rrdcached"
 echo "#write_threads 4"
 echo ""
 echo "#Data is written to disk every timeout seconds. See -w option for rrdcached"
 echo "#write_timeout 300"
 echo ""
 echo "#delay for writing. See -z option for rrdcached"
 echo "#write_delay 0"
 echo ""
 echo "#Timeout for flushing old data. See -f option for rrdcached"
 echo "#flush_timeout 3600"

}
usage() {
    echo "Usage: zenrrdcached [run|start|restart|stop|status|stats] [options]"
}


ACTION=$1
case "${ACTION}" in
  status)
    ;;
  help)
    ;;
  stats)
    ;;
  *)
    if [ -e $ZENHOME/bin/zensendaudit ] ; then
      zensendaudit kind=Daemon action=$ACTION daemon=zenrrdcached > /dev/null 2>&1
    fi
    ;;
esac
shift
export OPTS="$@"
mkdir -p $JOURNALDIR
$ACTION || usage
