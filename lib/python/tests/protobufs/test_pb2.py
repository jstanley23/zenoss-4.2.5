# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)



DESCRIPTOR = descriptor.FileDescriptor(
  name='test.proto',
  package='org.zenoss.test',
  serialized_pb='\n\ntest.proto\x12\x0forg.zenoss.test\"O\n\x11TestNestedMessage\x12,\n\ttest_enum\x18\x01 \x01(\x0e\x32\x19.org.zenoss.test.TestEnum\x12\x0c\n\x04uuid\x18\x02 \x01(\t\"\xd9\x01\n\x0bTestMessage\x12\x0c\n\x04uuid\x18\x01 \x02(\t\x12\x14\n\x0c\x63reated_time\x18\x02 \x01(\x04\x12,\n\ttest_enum\x18\x03 \x01(\x0e\x32\x19.org.zenoss.test.TestEnum\x12\x34\n\x08messages\x18\x04 \x03(\x0b\x32\".org.zenoss.test.TestNestedMessage\x12\x32\n\x06nested\x18\x05 \x01(\x0b\x32\".org.zenoss.test.TestNestedMessage\x12\x0e\n\x06\x62inary\x18\x06 \x01(\x0c\"\"\n\x10\x45mptyTestMessage\x12\x0e\n\x06unused\x18\x01 \x03(\t*4\n\x08TestEnum\x12\x0c\n\x08OPTION_A\x10\x01\x12\x0c\n\x08OPTION_B\x10\x02\x12\x0c\n\x08OPTION_C\x10\x03')

_TESTENUM = descriptor.EnumDescriptor(
  name='TestEnum',
  full_name='org.zenoss.test.TestEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='OPTION_A', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OPTION_B', index=1, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OPTION_C', index=2, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=368,
  serialized_end=420,
)


OPTION_A = 1
OPTION_B = 2
OPTION_C = 3



_TESTNESTEDMESSAGE = descriptor.Descriptor(
  name='TestNestedMessage',
  full_name='org.zenoss.test.TestNestedMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='test_enum', full_name='org.zenoss.test.TestNestedMessage.test_enum', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='uuid', full_name='org.zenoss.test.TestNestedMessage.uuid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=31,
  serialized_end=110,
)


_TESTMESSAGE = descriptor.Descriptor(
  name='TestMessage',
  full_name='org.zenoss.test.TestMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='uuid', full_name='org.zenoss.test.TestMessage.uuid', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='created_time', full_name='org.zenoss.test.TestMessage.created_time', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='test_enum', full_name='org.zenoss.test.TestMessage.test_enum', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='messages', full_name='org.zenoss.test.TestMessage.messages', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='nested', full_name='org.zenoss.test.TestMessage.nested', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='binary', full_name='org.zenoss.test.TestMessage.binary', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=113,
  serialized_end=330,
)


_EMPTYTESTMESSAGE = descriptor.Descriptor(
  name='EmptyTestMessage',
  full_name='org.zenoss.test.EmptyTestMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='unused', full_name='org.zenoss.test.EmptyTestMessage.unused', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=332,
  serialized_end=366,
)

_TESTNESTEDMESSAGE.fields_by_name['test_enum'].enum_type = _TESTENUM
_TESTMESSAGE.fields_by_name['test_enum'].enum_type = _TESTENUM
_TESTMESSAGE.fields_by_name['messages'].message_type = _TESTNESTEDMESSAGE
_TESTMESSAGE.fields_by_name['nested'].message_type = _TESTNESTEDMESSAGE
DESCRIPTOR.message_types_by_name['TestNestedMessage'] = _TESTNESTEDMESSAGE
DESCRIPTOR.message_types_by_name['TestMessage'] = _TESTMESSAGE
DESCRIPTOR.message_types_by_name['EmptyTestMessage'] = _EMPTYTESTMESSAGE

class TestNestedMessage(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TESTNESTEDMESSAGE
  
  # @@protoc_insertion_point(class_scope:org.zenoss.test.TestNestedMessage)

class TestMessage(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TESTMESSAGE
  
  # @@protoc_insertion_point(class_scope:org.zenoss.test.TestMessage)

class EmptyTestMessage(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _EMPTYTESTMESSAGE
  
  # @@protoc_insertion_point(class_scope:org.zenoss.test.EmptyTestMessage)

# @@protoc_insertion_point(module_scope)
